{"version":3,"sources":["containers/containers.module.css","App.module.css","media/eye.svg","components/ui.module.css","media/cat.svg","media sync /^/.//.*/.png$","media/cm.png","media/mov.png","media/pq.png","media/prt.png","media/rlx.png","components/button.js","containers/frontPage.js","components/project.js","containers/projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","cBtn","border","backgroundColor","button","props","onClick","clicked","className","classes","Button","style","children","RightArrow","icon","color","size","frontPage","React","forwardRef","ref","Container","MasterContainer","HeroText","JobText","ButtonContainer","target","textDecoration","href","width","height","position","top","left","project","bg","require","img","ProjectContainer","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","display","justifyContent","alignItems","fontSize","fontWeight","gLink","vLink","eye","projects","ProjectsContainer","marginTop","marginLeft","margin","ProjectsInnerContainer","App","state","currentPage","projectRef","createRef","appRef","clickHandler","current","scrollIntoView","behavior","console","log","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a0fc064.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"containers_Container__2m-pg\",\"MasterContainer\":\"containers_MasterContainer__VeYb_\",\"HeroText\":\"containers_HeroText__PDNFD\",\"JobText\":\"containers_JobText__2VwVv\",\"ProjectsContainer\":\"containers_ProjectsContainer__2m1b0\",\"ProjectsInnerContainer\":\"containers_ProjectsInnerContainer__2Mq6s\",\"ButtonContainer\":\"containers_ButtonContainer__2M8Fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","module.exports = __webpack_public_path__ + \"static/media/eye.4b4cf493.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ui_Button__zz-M-\",\"RightArrow\":\"ui_RightArrow__3j8Qd\",\"rightAnimation\":\"ui_rightAnimation__1-4rf\",\"ProjectContainer\":\"ui_ProjectContainer__1e3m0\"};","module.exports = __webpack_public_path__ + \"static/media/cat.76d344f0.svg\";","var map = {\n\t\"./cm.png\": 60,\n\t\"./mov.png\": 61,\n\t\"./pq.png\": 62,\n\t\"./prt.png\": 63,\n\t\"./rlx.png\": 64\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 59;","module.exports = __webpack_public_path__ + \"static/media/cm.a19a7da0.png\";","module.exports = __webpack_public_path__ + \"static/media/mov.5508e5b7.png\";","module.exports = __webpack_public_path__ + \"static/media/pq.8f733e8e.png\";","module.exports = __webpack_public_path__ + \"static/media/prt.d278e653.png\";","module.exports = __webpack_public_path__ + \"static/media/rlx.c5422c15.png\";","import React from 'react'\nimport classes from './ui.module.css'\nimport MaterialIcon from 'material-icons-react';\n\nconst button = props => {\n    return (\n        <div onClick={props.clicked} className={classes.Button} style={cBtn}>\n            <p>{props.children}</p>\n            <div className={classes.RightArrow}>\n                <MaterialIcon icon={'arrow_forward'} color={'#FCFCFC'} size={22} />\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\nlet cBtn = {\n    border: '1px solid white',\n    backgroundColor: 'black'\n}\n\nexport default button\n","import React from 'react';\nimport Button from '../components/button';\nimport Particles from 'react-particles-js';\nimport classes from './containers.module.css';\n\n\nconst frontPage = React.forwardRef((props, ref) => (\n    <section ref={ref} className={classes.Container}>\n        <div className={classes.MasterContainer}>\n            <p className={classes.HeroText}>Hello. I'm Mert.</p>\n            <p className={classes.JobText}>I'm a Front End Engineer. React Enthusiast.</p>\n            <div className={classes.ButtonContainer}>\n                <Button clicked={props.clicked}>My Projects</Button>\n                <Button><a target=\"_blank\" style={{color: 'white', textDecoration: 'none'}} href = {'https://github.com/mertuner'}>Github</a></Button>\n            </div>\n            <p>E-mail: {'   uner_mert@yahoo.com'}</p>\n        </div>\n        <Particles\n            width={'100%'}\n            height={'100%'}\n            color={'#6DECB9'}\n            style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n            }}\n        />\n    </section>\n)\n)\n\n\nexport default frontPage\n","import React from 'react'\nimport classes from './ui.module.css';\nimport github from '../media/cat.svg';\nimport eye from '../media/eye.svg';\n\nconst project = props => {\n\n    let bg = require(`../media/${props.img}.png`)\n\n    return (\n        <div className={classes.ProjectContainer}>\n            <div style={{height: '80%', width: '100%', backgroundImage: `url(${bg})` ,backgroundSize: 'cover', backgroundRepeat: 'no-repeat', backgroundPosition: 'center' }}></div>\n            <div style={{width: '100%', height: '20%', display: 'flex', justifyContent: 'space-evenly', alignItems: 'center'}}>\n                <a target=\"_blank\" style={{fontSize: '1em', fontWeight: '500', color: 'black', textDecoration: 'none'}} href = {props.gLink}>\n                    {'</>'}\n                    {/* <div style={{width: '25px', height: '25px', backgroundImage: `url(${github})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat'}}/> */}\n                </a>\n                <a target=\"_blank\" style={{fontSize: '0.9em', fontWeight: '300', color: 'black', textDecoration: 'none'}} href = {props.vLink}>\n                <div style={{width: '25px', height: '25px', backgroundImage: `url(${eye})`}}/>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default project\n","import React from 'react';\nimport classes from './containers.module.css';\nimport Project from '../components/project';\n\nconst projects = React.forwardRef((props, ref) => (\n    <section className={classes.ProjectsContainer} ref={ref}>\n        <div style={{marginTop: '25px', width: '85%', display: 'flex', justifyContent: 'flex-start', alignItems: 'center'}}>\n        <h3>My Projects</h3>\n        <div style={{width: '2px', height: '30px', marginLeft: '10px', backgroundColor: 'black'}}>\n\n        </div>\n        </div>\n        <div style={{width: '85%', height: '1px', backgroundColor: '#cccccc', margin: '20px 0 20px 0'}}></div>\n        <div className={classes.ProjectsInnerContainer}>\n            <Project img='cm' vLink={'https://personal-musical-therapy.firebaseapp.com/'} gLink={'https://github.com/mertuner/Personal-Musical-Affirmations'}/>\n            <Project img='pq' vLink={'https://www.projectquality.app/'} gLink={'https://github.com/mertuner/project-quality'}/>\n            <Project img='rlx' vLink={'https://mertuner.github.io/RelaxeStatic/'} gLink={''}/>\n            {/* <Project img='mov' vLink={'https://moviedb-8a20c.web.app/'} gLink={'https://github.com/mertuner/movie-city-db'}/> */}\n            <Project img='prt' vLink={'https://www.mertuner.com'} gLink={'https://github.com/mertuner/RelaxeStatic'}/>\n        </div>\n    </section>\n))\n\nexport default projects;\n","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport FrontPage from './containers/frontPage';\nimport Projects from './containers/projects';\n\nclass App extends Component {\n\n  state = {\n    currentPage: 'welcome',\n    projectRef: React.createRef(),\n    appRef: React.createRef()\n  }\n\n  componentDidMount(){\n    this.state.appRef.current.scrollIntoView(true, {behavior: 'smooth' })\n  }\n\n  clickHandler = () => {\n    this.state.projectRef.current.scrollIntoView(true, {behavior: 'smooth' })\n    console.log('clicked');\n  }\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <FrontPage ref={this.state.appRef} clicked={this.clickHandler}/>\n        <Projects ref={this.state.projectRef}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}